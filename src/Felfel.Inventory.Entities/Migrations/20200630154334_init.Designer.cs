// <auto-generated />
using System;
using Felfel.Inventory.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Felfel.Inventory.Entities.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20200630154334_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("Felfel.Inventory.Entities.Batch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvailableUnits")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeliveredUnits")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BatchId");

                    b.HasIndex("ProductId");

                    b.ToTable("Batchs");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            AvailableUnits = 50,
                            CreatedAtUtc = new DateTime(2020, 6, 28, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(7040),
                            DeliveredUnits = 50,
                            ExpirationDate = new DateTime(2020, 6, 30, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(6244),
                            IsDeleted = false,
                            ProductId = 1
                        },
                        new
                        {
                            BatchId = 2,
                            AvailableUnits = 85,
                            CreatedAtUtc = new DateTime(2020, 6, 27, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(7098),
                            DeliveredUnits = 100,
                            ExpirationDate = new DateTime(2020, 7, 4, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(7086),
                            IsDeleted = false,
                            ProductId = 2
                        },
                        new
                        {
                            BatchId = 3,
                            AvailableUnits = 200,
                            CreatedAtUtc = new DateTime(2020, 6, 29, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(7101),
                            DeliveredUnits = 200,
                            ExpirationDate = new DateTime(2020, 6, 28, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(7100),
                            IsDeleted = false,
                            ProductId = 3
                        },
                        new
                        {
                            BatchId = 4,
                            AvailableUnits = 60,
                            CreatedAtUtc = new DateTime(2020, 6, 27, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(7103),
                            DeliveredUnits = 100,
                            ExpirationDate = new DateTime(2020, 6, 30, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(7102),
                            IsDeleted = false,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("Felfel.Inventory.Entities.BatchHistory", b =>
                {
                    b.Property<int>("BatchHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BatchId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Units")
                        .HasColumnType("INTEGER");

                    b.HasKey("BatchHistoryId");

                    b.ToTable("BatchHistorys");

                    b.HasData(
                        new
                        {
                            BatchHistoryId = 1,
                            BatchId = 1,
                            CreatedAtUtc = new DateTime(2020, 6, 28, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(9144),
                            Description = "Order Recived From Supplier Family Bistro",
                            Units = 50
                        },
                        new
                        {
                            BatchHistoryId = 2,
                            BatchId = 2,
                            CreatedAtUtc = new DateTime(2020, 6, 27, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(9188),
                            Description = "Order Recived From Supplier Family Bistro",
                            Units = 100
                        },
                        new
                        {
                            BatchHistoryId = 3,
                            BatchId = 2,
                            CreatedAtUtc = new DateTime(2020, 6, 30, 13, 43, 34, 290, DateTimeKind.Utc).AddTicks(9190),
                            Description = "Removed 10 units for Company AAA",
                            Units = -10
                        },
                        new
                        {
                            BatchHistoryId = 4,
                            BatchId = 2,
                            CreatedAtUtc = new DateTime(2020, 6, 30, 14, 43, 34, 290, DateTimeKind.Utc).AddTicks(9192),
                            Description = "Lost 5 units",
                            Units = -5
                        },
                        new
                        {
                            BatchHistoryId = 5,
                            BatchId = 3,
                            CreatedAtUtc = new DateTime(2020, 6, 30, 14, 43, 34, 290, DateTimeKind.Utc).AddTicks(9193),
                            Description = "Order Recived",
                            Units = 200
                        },
                        new
                        {
                            BatchHistoryId = 6,
                            BatchId = 4,
                            CreatedAtUtc = new DateTime(2020, 6, 27, 15, 43, 34, 290, DateTimeKind.Utc).AddTicks(9194),
                            Description = "Order Recived From Supplier Family Bistro",
                            Units = 100
                        },
                        new
                        {
                            BatchHistoryId = 7,
                            BatchId = 4,
                            CreatedAtUtc = new DateTime(2020, 6, 30, 13, 43, 34, 290, DateTimeKind.Utc).AddTicks(9195),
                            Description = "Removed 40 units for Company BBB",
                            Units = -40
                        });
                });

            modelBuilder.Entity("Felfel.Inventory.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupplierName")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CreatedAtUtc = new DateTime(2020, 6, 23, 18, 47, 40, 289, DateTimeKind.Utc).AddTicks(3910),
                            IsActive = true,
                            IsDeleted = false,
                            Price = 12.0,
                            ProductName = "Penne Vodka",
                            SupplierName = "Family Bistro"
                        },
                        new
                        {
                            ProductId = 2,
                            CreatedAtUtc = new DateTime(2020, 6, 23, 18, 47, 40, 289, DateTimeKind.Utc).AddTicks(4577),
                            IsActive = true,
                            IsDeleted = false,
                            Price = 8.5,
                            ProductName = "Cesar Salad",
                            SupplierName = "Family Bistro"
                        },
                        new
                        {
                            ProductId = 3,
                            CreatedAtUtc = new DateTime(2020, 6, 23, 18, 47, 40, 289, DateTimeKind.Utc).AddTicks(4616),
                            IsActive = true,
                            IsDeleted = false,
                            Price = 5.5,
                            ProductName = "Turkey Sandwich",
                            SupplierName = "Jano's Shop"
                        });
                });

            modelBuilder.Entity("Felfel.Inventory.Entities.Batch", b =>
                {
                    b.HasOne("Felfel.Inventory.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
